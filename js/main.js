/*
* Задания на урок:
1) Удалить все рекламные блоки со страницы (правая часть сайта)
2) Изменить жанр фильма, поменять "комедия" на "драма"
3) Изменить задний фон с постером фильма на изображение "bg.jpg". Оно лежит в папке img.
Реализовать только при помощи JS
4) Список фильмов на странице сформировать на основании данных из этого JS файла.
Отсортировать их по алфавиту 
5) Добавить нумерацию выведенных фильмов */

//Урок№30.Практика.Задание на обработку действий со страницей.


"use strict";

const movieDB = {
    movies: [
        "Логан",
        "Лига справедливости",
        "Ла-ла лэнд",
        "Одержимость",
        "Скотт Пилигрим против..."
    ]
};

//Задача№1
const adv = document.querySelectorAll('.promo__adv img'),
      poster = document.querySelector('.promo__bg'), //указывает что нам необходим только один этот элемент
      genre = poster.querySelector('.promo__genre'),//теперь мы можем получить жанр из этого блока- .promo__bg,
//мы внутри переменной poster, внутри этого элемента

      movieList = document.querySelector('.promo__interactive-list');//задача№3
//используем querySelector а не querySelectorAll чтобы получить первый элемент со страницы по данному селектору

      //мы не можем просто так взять и удалить через remove() потому что у него просто не существует методов
//(нету HTMLCollection) нам необходимо взять каждый элемент этого псевдомассива и уже последовательно их удалить
adv.forEach(item => { //мы получали этот псевдомассив через querySelectorAll значит у него есть метод forEach
//во внутрь передаем callback функцию говорим что там будет item,это стрелочная функция которая содержит один элемент
    item.remove();//теперь можем взаимодействовать с каждым элементом
});

//рассмотрим 2 вариант как это будет выглядеть с обычной функцией
//adv.forEach(function (item) { //это безымянная функция которая создается здесь и сейчас она принимает 1 аргумент item
//    item.remove();//который у нас будет приходить из нашего псевдомассива
//}); //сохранив видим что элементы не появились,но предпочтительнее использовать стрелочную функцию


//следующая задача это взять внутренности которые написаны в элементу genre
genre.textContent = 'драма';//мы изменяем просто текст, мы используем метод textContent


//Задача№3
poster.style.backgroundImage = 'url("images/bg.jpg")';//изображение заднего фона

//Задача№4
//если я хочу полностью очистить этот элемент используем метод innerHTML
movieList.innerHTML = "";//если я запишу туда ничего то элемент очистится, то элемент ничего уже не будет содержать



//Задача№5
movieDB.movies.sort();//sort сортирует все элементы по алфавиту если там строки
//все сформировали по алфавиту

//console.log(poster.innerHTML);//если мы такимобразом обращаемся к innerHTML то мы просто получаем значение 
//этого свойства значения со страницы в разделе консоль в браузере,но используется это не часто



//все элементы с которыми мы будем взаимодействовать лежат в базе данных в свойстве movies
movieDB.movies.forEach((film, i) => { //если нам необходимо что то перебрать прописываем метод forEach
//film это каждый отдельный фильм который написан у нас в массиве и переменная i которая соержит номер по порядку
    //добавляем нумерацию выведенных фильмов
    
    //чтобы не городить конструкцию заменяем все таким решением
    //каждый раз когда цикл будет повторятся, наша итерация +=,мы в innerHTML будем добавлять еще какие то строки
    //строка на странице при помощи innerHTML интерпретируется как верстка
    movieList.innerHTML += ` 
    <li class="promo__interactive-item">${i + 1} ${film}
        <div class="delete"></div>
    </li>
    `;
});

//a = a + 1;//записываем сюда предыдущее значение
//a += 1;//упрощенный синтаксис,это две абсолютно индентичные команды

//a = a + "aaa";
//a += "aaa";//со строками будет все точно также работать